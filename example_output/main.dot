digraph code {
	graph [bgcolor=white];
	node [color=lightgray, style=filled shape=box fontname="Courier" fontsize="8"];
	"0x00000000_0x00000000" -> "0x00000000_0x00000047" [color="green"];
	"0x00000000_0x00000000" -> "0x00000000_0x00000002" [color="red"];
 "0x00000000_0x00000000" [URL="fcn.00000000/0x00000000", color="lightgray", label="/ (fcn) fcn.00000000 236\l| 0x00000000   jg 0x47\l"]
	"0x00000000_0x00000002" -> "0x00000000_0x0000003b" [color="green"];
	"0x00000000_0x00000002" -> "0x00000000_0x0000002a" [color="red"];
 "0x00000000_0x00000002" [URL="fcn.00000000/0x00000002", color="lightgray", label="| 0x00000002   add r8b, byte [rcx]\l| 0x00000006   add dword [rax], eax\l| 0x00000008   add byte [rax], al\l| 0x0000000a   add byte [rax], al\l| 0x0000000c   add byte [rax], al\l| 0x0000000e   add byte [rax], al\l| 0x00000010   add al, byte [rax]\l| 0x00000012   add byte ds:[rcx], al\l| 0x00000015   add byte [rax], al\l| 0x00000017   add byte [rsi + 0x4005], al\l| 0x0000001d   add byte [rax], al\l| 0x0000001f   add byte [rax], al\l| 0x00000022   add byte [rax], al\l| 0x00000024   add byte [rax], al\l| 0x00000026   add byte [rax], al\l| 0x00000028   js 0x3b\l"]
	"0x00000000_0x0000002a" -> "0x00000000_0x0000003c" [color="blue"];
 "0x00000000_0x0000002a" [URL="fcn.00000000/0x0000002a", color="lightgray", label="| 0x0000002a   add byte [rax], al\l| 0x0000002c   add byte [rax], al\l| 0x0000002e   add byte [rax], al\l| 0x00000030   add byte [rax], al\l| 0x00000032   add byte [rax], al\l| 0x00000034   add byte [rax], dil\l| 0x00000037   add byte [rcx], cl\l| 0x00000039   add byte [rax], al\l"]
 "0x00000000_0x0000003b" [URL="fcn.00000000/0x0000003b", color="lightgray", label="  ; JMP XREF from 0x00000028 (fcn.00000000)\l| 0x0000003b   add byte [rax + rax], bl\l| 0x0000003e   sbb eax, dword [rax]\l"]
 "0x00000000_0x00000047" [URL="fcn.00000000/0x00000047", color="lightgray", label="  ; JMP XREF from 0x00000000 (fcn.00000000)\l| 0x00000047   add byte [rax], al\l| 0x0000004a   add byte [rax], al\l| 0x0000004c   add byte [rax], al\l| 0x0000004e   add byte [rax], al\l| 0x00000050   add byte [rax], al\l| 0x00000054   add byte [rax], al\l| 0x00000056   add byte [rax], al\l| 0x00000058   add byte [rax], al\l| 0x0000005c   add byte [rax], al\l| 0x0000005e   add byte [rax], al\l| 0x00000060   clc\l| 0x00000061   add dword [rax], eax\l| 0x00000063   add byte [rax], al\l| 0x00000065   add byte [rax], al\l| 0x00000067   add al, bh\l| 0x00000069   add dword [rax], eax\l| 0x0000006b   add byte [rax], al\l| 0x0000006d   add byte [rax], al\l| 0x0000006f   add byte [rax], cl\l| 0x00000071   add byte [rax], al\l| 0x00000073   add byte [rax], al\l| 0x00000075   add byte [rax], al\l| 0x00000077   add byte [rbx], al\l| 0x00000079   add byte [rax], al\l| 0x0000007b   add byte [rax + rax], al\l| 0x0000007e   add byte [rax], al\l| 0x00000080   cmp byte [rdx], al\l| 0x00000082   add byte [rax], al\l| 0x00000084   add byte [rax], al\l| 0x00000086   add byte [rax], al\l| 0x00000088   cmp byte [rdx], al\l| 0x0000008a   add byte [rax], al\l| 0x0000008d   add byte [rax], al\l| 0x0000008f   add byte [rax], bh\l| 0x00000091   add al, byte [rax]\l| 0x00000094   add byte [rax], al\l| 0x00000096   add byte [rax], al\l| 0x00000098   sbb al, 0\l| 0x0000009a   add byte [rax], al\l| 0x0000009c   add byte [rax], al\l| 0x0000009e   add byte [rax], al\l| 0x000000a0   sbb al, 0\l| 0x000000a2   add byte [rax], al\l| 0x000000a4   add byte [rax], al\l| 0x000000a6   add byte [rax], al\l| 0x000000a8   add dword [rax], eax\l| 0x000000aa   add byte [rax], al\l| 0x000000ac   add byte [rax], al\l| 0x000000ae   add byte [rax], al\l| 0x000000b0   add dword [rax], eax\l| 0x000000b2   add byte [rax], al\l| 0x000000b4   add eax, 0\l| 0x000000b9   add byte [rax], al\l| 0x000000bb   add byte [rax], al\l| 0x000000bd   add byte [rax], al\l| 0x000000bf   add byte [rax], al\l| 0x000000c1   add byte [rax], al\l| 0x000000c4   add byte [rax], al\l| 0x000000c6   add byte [rax], al\l| 0x000000c8   add byte [rax], al\l| 0x000000ca   add byte [rax], al\l| 0x000000cd   add byte [rax], al\l| 0x000000cf   add byte [rax + rcx], ch\l| 0x000000d2   add byte [rax], al\l| 0x000000d4   add byte [rax], al\l| 0x000000d6   add byte [rax], al\l| 0x000000d8   sub al, 8\l| 0x000000da   add byte [rax], al\l| 0x000000dc   add byte [rax], al\l| 0x000000de   add byte [rax], al\l| 0x000000e0   add byte [rax], al\l| 0x000000e2   and byte [rax], al\l| 0x000000e4   add byte [rax], al\l| 0x000000e6   add byte [rax], al\l| 0x000000e8   add dword [rax], eax\l\\ 0x000000ea   add byte [rax], al\l"]
}
